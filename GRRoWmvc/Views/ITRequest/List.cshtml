@model GRRoWmvc.Data.PaginatedList<GRRoWmvc.Models.ITRequestViewModels.ITRequestListViewModel>

<h2>IT Requests</h2>
<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="List" method="get">
    <div class="form-actions no-color">
        <p>
            Search: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="List">Back to Full List</a>
        </p>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
                <th>
                    Id
                </th>                
                <th>
                    Description
                </th>
                <th>
                    Status
                </th>
                <th>
                    RequestedBy
                </th>
                <th>
                    RequestedDate
                </th>
                <th>
                    CompletedBy
                </th>
                <th>
                    CompletedDate
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequestedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequestedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompletedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompletedDate)
            </td>
            <td>
                @if (User.IsInRole(Constants.ADMINISTRATOR_ROLE))
                {
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a><text> | </text><a asp-action="Details" asp-route-id="@item.Id">Details</a><text> | </text><a asp-action="Complete" asp-route-id="@item.Id">Complete</a>
                }
                else
                {
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a><text> | </text><a asp-action="Details" asp-route-id="@item.Id">Details</a>
                } 
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="List"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="List"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>